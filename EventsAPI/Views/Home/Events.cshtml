@model EventsResponse

@if (Model.Events != null)
{
    <h1>Number of results: @Model.Events.Count</h1>
    @for (int i = 0; i < Model.Events.Count; i++)
    {
        <h3>@Model.Events[i].Name</h3>

        <p><img src="@Url.Content(@Model.Events[i].Images[0].Url)" width="350px"></p>
        if (Model.Events[i].PriceRanges.Count > 0)
        {
            <p>Ticket Prices: $@Model.Events[i].PriceRanges[0].Min - $@Model.Events[i].PriceRanges[0].Max</p>

        }
        <p>@Model.Events[i].Dates.Status.Code</p>
        @if (Model.Events[i].Info != null)
        {
            <p>Description: @Model.Events[i].Info</p>
        }
        <p>Type of Event: @Model.Events[i].Classifications[0].Segment.Name</p>

        if (Model.Favorites.Contains(Model.Events[i].Id))
        {
            <a asp-action="DeleteFromFavorites" class="btn btn-danger"
               asp-route-id="@Model.Events[i].Id">Remove From Favorites</a>
        }
        else
        {
            <a asp-action="AddToFavorites" class="btn btn-primary"
               asp-route-id="@Model.Events[i].Id">Add To Favorites</a>
        }
    }
    <div>
        @if (Model.Page != 0)
        {
            if (Model.Page > 1)
            {
                <a asp-action="Events2" asp-route-link="@Model.PageLink" asp-route-page="0"
                   class="btn btn-primary">First Page</a>
            }
            <a asp-action="Events2" asp-route-link="@Model.PageLink" asp-route-page="@(Model.Page - 1)"
               class="btn btn-primary">Previous Page</a>
        }
        <a asp-action="Events2" asp-route-link="@Model.PageLink" asp-route-page="@(Model.Page + 1)"
           class="btn btn-primary">Next Page</a>
    </div>

}
else
{
    <p>Those parameters are not compatible with the API.</p>
}
<a asp-action="Index">Try again</a>
